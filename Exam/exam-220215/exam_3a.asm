		.MODEL SMALL
		.STACK 100h
		.DATA
	FXH DQ ?
	FX DQ ?
	FXNH DQ ?
	FXMFXNH DQ ?
	MID DQ ?
	X1 DQ ?
	X2 DQ ?
		.CODE
		.386
		.387
	_compare_h PROC NEAR 
		PUBLIC _compare_h
		PUSH BP
		MOV BP,SP
		SUB SP,8
		FLD QWORD PTR [BP+6]
		FSTP QWORD PTR [BP-8]
		CALL WORD PTR [BP+4]
		ADD SP,8
		FSTP FX 
		SUB SP,8
		FLD QWORD PTR [BP+6]
		FADD QWORD PTR [BP+14]
		FSTP QWORD PTR [BP-8]
		CALL WORD PTR [BP+4]
		ADD SP,8
		FSTP FXH
		SUB SP,8
		FLD QWORD PTR [BP+6]
		FSUB QWORD PTR [BP+14]
		FSTP QWORD PTR [BP-8]
		CALL WORD PTR [BP+4]
		ADD SP,8
		FSTP FXNH
		FLD FX 
		FSUB FXNH 
		FSTP FXMFXNH
		FLD FXH 
		FSUB FX 
		FCOMP FXMFXNH
		FSTSW AX 
		SAHF 
		JNBE FALSE
		MOV AX,1 
		JMP ENDING
FALSE:
		MOV AX,0
ENDING:
		POP BP 
		RET
	_compare_h ENDP 
	
	
	_search_h PROC NEAR 
		PUBLIC _search_h
		PUSH BP
		MOV BP,SP 
		FLD QWORD PTR [BP+6]
		FSTP X1
		FLD QWORD PTR [BP+14]
		FSTP X2
START_LOOP:
		FLD X1
		FADD X2
		FLD1
		FADD ST,ST 
		FDIV
		FSTP MID 
		SUB SP,16 
		FLD QWORD PTR [BP+22]
		FSTP QWORD PTR [BP-8]
		FLD MID
		FSTP QWORD PTR [BP-16]
		PUSH WORD PTR [BP+4]
		CALL _compare_h
		ADD SP,18
		FLD MID 
		CMP AX,1
		JNE NOT_FH
		FSTP X2
		JMP CHECK_LOOP
NOT_FH:
		FSTP X1 
CHECK_LOOP:
		FLD X2 
		FSUB X1 
		FCOMP QWORD PTR [BP+22]
		FSTSW AX 
		SAHF 
		JA START_LOOP
		
		FLD MID 
		POP BP 
		RET 
	_search_h ENDP
		END
		